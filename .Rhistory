A and B = A or (B and A')
(B and A') means that which is part of B which dont have A at all
A  , (B and A') are mutually exclusive events
let x and y be exclusive events then P(X and Y) = P(X)+p(Y)
X=A
Y=(B and A')
then A and B = A or (B and A')
##problem 1.c
###problem 1.c.a
P(A/B) = P(A and B)/P(B)
P(A/B) = P(A)*P(B)/P(B)
P(A/B) = P(A)
P(A/B) = 1
probability of A where B has already occured
###problem 1.c.b
P(A'/B) = P(A' and B)/P(B)
P(A'/B) = P(A')*P(B)/P(B)
P(A'/B) = P(A')
P(A'/B) = 0
###problem 1.c.c
P(B/A)=P(B and A)/P(A)
P(B/A)=P(B)*P(A)/P(A)
P(B/A)=P(B)
###problem 1.c.d
P(B/A')= P(B and A')/P(A')
P(B/A')=P(B)*P(A')/P(A')
P(B/A')=P(B)
#problem 2
##problem 2.a
A,B,C are three arbitary events
P(A)+P(B)+P(C)  -> add these probability which makes the total
P(A and B)+P(B and C)+P(A and C)  -> subtract these elements from total
P(A and B and C) -> add these probability
Therefore summing up all
P(A and B and C) = P(A)+P(B)+P(C)-P(A and B)-P(B and C)-P(A and C)+P(A and B and C)
we will be adding and subtracting alternatively in principle of inclusion and exclusion
#problem 2.b
maximum value of P(A and B and C) will be when  A,B,C are exclusive
maximum value = P(A)+P(B)+P(C)
= 0.1+0.2+0.3
= 0.6
minimum value of P(A and B and C) will be when  A,B,C are overlapping each other
minimum intersection possible is 0.1
P(A and B and C) = P(A)+P(B)+P(C)-P(A and B)-P(B and C)-P(A and C)+P(A and B and C)
max value of P(A and B) = P(B)=0.2  as(P(B)>P(A))
max value of P(B and C) = P(c)=0.3  as(P(C)>P(B))
max value of P(C and A) = P(c)=0.3  as(P(C)>P(A))
MIN calue of P( A and B and C)= 0
so the range id 0.1 to 0.6
#problem 2.c
A,B, and C are mutually independent
A and C are mutually exclusive -> P(A and C) =P(A)*P(C)
A and B are independent ->P(A and B)=P(A)*P(B)
B and C are independent ->P(C and B)=P(C)*P(B)
P(A and B and C) =P(C)*P(B)*P(A)
P(A and B and C)= P(A)+P(B)+P(C)-P(A and B)-P(C and B)-P(A and C)+P(A and B and C)
P(A and B and C)= 0.1+0.2+0.3-(0.1*0.2)-(0.2*0.3)-(0.3*0.1)+(0.1*0.2*0.3)
P(A and B and C)=0.6-0.02-0.06-0.03+0.006
P(A and B and C)=0.496
#problem 2.d
A and C are mutually exclusive -> P(A and C) =0
A and B are independent ->P(A and B)=P(A)*P(B)
B and C are independent ->P(C and B)=P(C)*P(B)
A and B and C  P(A and B and C) =0
P(A and B and C)= P(A)+P(B)+P(C)-P(A and B)-P(C and B)-P(A and C)+P(A and B and C)
P(A and B and C)= 0.1+0.2+0.3+(P(A)*P(B)) +(P(C)*P(B)) + 0+0
P(A and B and C)=0.6-0.02-0.06
P(A and B and C)=0.52
#problem 2.e
yes it is possible
A be the event where cricketer can hit 7 runs in a ball
B be the event where cricketer can hit six in a ball
C be the event where cricketer gets extra run by wide ball
here A is independent of B
and also A is independent of C
but A can only happen when when B and C occur at same time which means that A is dependent on B&C
#problem 3
##problem 3.a
L be the event where visitors age is less than 18
H be the event where visitors age is greater than or equal to 18
where L and H are mutually exclusive events
C be the event where visitor clicked the link
clicks on a particular link with probability 0.02 if the visitor is less than 18 years old
above sentence means that P(L and C)=0.02
clicks the link with probability 0.05 if the visitor is 18 years old or over
above sentence means that P(H and C)=0.05
Approximately 30% of visitors to the website are less than 18 years old
above sentence means that P(L)=0.3 , P(H)=0.7
As L and H are mutually exclusive events
P(c) = P(C and L)+P(C and H)
P(C) = 0.02+0.05
P(C) = 0.07
the probability that someone who clicks on the link is at least 18 years old
above means that
P(H/c) = P(H and C)/P(C)
P(H/c) = 0.05/0.07
P(H/c) = 0.7142857
the probability that someone who clicks on the link is at least 18 years old = 0.7142857
##problem 3.b
If an individual does not click on the link, what is the probability that they are younger than
18 years old
P(L/C') = P(L and C')/P(C')
P(L/C') = P(L) - P(L and C)/(1-P(C))
P(L/C') = 0.3-.02/(1-.07)
P(L/c') = 0.30107
the probability that they are younger than 18 years old, who does not click =0.30107
#problem 4
##problem 4a
C is event where families own a car
H is event where families own a house
Sixty percent of the families in a certain community own their own car
Above statement means that P(C)=0.6
thirty percent own their own home, and
Above statement means that P(H)=0.6
twenty percent own both their own car and their own home.
Above statement means that P(C and H)=0.2
the probability that this family owns a car or a house
but not both = P(C or H) - P(C and H)
P(C or H) = P(C)+P(H)-P(C and H)
= 0.6+0.3-0.2
P(C or H) = 0.7
= P(C or H) - P(C and H)
= 0.7 - 0.2
=0.5
the probability that this family owns a car or a house
but not both ==0.5
##problem 4b
the probability that this family owns a car given that
they own a house = P(C/H)
P(C/H) = P(C and H)/P(H)
= 0.2/0.3
= 0.6667
the probability that this family owns a car given that
they own a house=0.6667
myBreaks = seq(min(stroke$age), max(stroke$age), length=12)
library(ISwR)
myBreaks = seq(min(stroke$age), max(stroke$age), length=12)
hist(stroke$age,breaks=myBreaks)
myBreaks = seq(min(stroke$age), max(stroke$age), length=12)
hist(stroke$age,breaks=myBreaks)
library(ISwR)
myBreaks = seq(min(stroke$age), max(stroke$age), length=12)
hist(stroke$age,breaks=myBreaks)
hist(stroke$age,breaks=myBreaks,xlab="Age",xlim=c(1,100),freq=TRUE,col="blue",main = "Amazing Histogram")
hist(stroke$age,breaks=myBreaks,xlab="Age",xlim=c(1,100),freq=TRUE,col="blue")
freq=TRUE
hist(stroke$age,breaks=myBreaks,xlab="Age",xlim=c(1,100),freq=TRUE)
xlim=c(1,100)
hist(stroke$age,breaks=myBreaks,xlab="Age",xlim=c(1,100))
xlab="Age"
hist(stroke$age,breaks=myBreaks,xlab="Age")
income=log(rnorm(6,mean=90000,sd=60000))
income=rnorm(6,mean=90000,sd=60000)
income=log(rnorm(6,mean=90000,sd=60000))
# probability that 3 may not come is 5/6
#m=P(X=1)
m=(1/6)*(5/6)
cat("the probability that X = 0",m)
# probability that 3 may not come is 5/6
#m=P(X=1)
m=(1/6)*(5/6)*(5/6)
cat("the probability that X = 2",m)
help("de")
help("dgeom")
dgeom(0,1/6)
dgeom(0,1/6)
dgeom(1,1/6)
dgeom(2,1/6)
#customer that comes into Great Buy purchases a computer with probability 0.03
# X=11
dgeom(11,0.03)
#the probability that the rst customer of the day to purchase a computer is the 11th customer that shows up
dgeom(11,0.03)
#customer that comes into Great Buy purchases a computer with probability 0.03
# X=11
#the probability that the rst customer of the day to purchase a computer is the 11th customer that shows up
dgeom(11,0.03)
scom = c(1,30,by=1)
P_sum = 0
for (ix in scom){
P_sum = dgeom(ix,0.03) + P_sum
}
scom = c(1,30,by=1)
P_sum = 0
for (ix in scom){
P_sum = dgeom(ix,0.03) + P_sum
}
P_sum
scom = c(1,31,by=1)
P_sum = 0
for (ix in scom){
P_sum = dgeom(ix,0.03) + P_sum
}
P_sum
#Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
#Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
variance_cust = (1-Pi)/(Pi^2)
Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
variance_cust = (1-Pi)/(Pi^2)
cat("the expected number of customers = ",exp_mean)
cat("variance",variance_cust)
Pi = 0.03
#the expected number of customers that arrive before someone purchases a computer for the situation in f
exp_mean = (1-Pi)/Pi
exp_mean = round(exp_mean)
variance_cust = (1-Pi)/(Pi^2)
cat("the expected number of customers = ",exp_mean)
cat("variance",variance_cust)
scom = c(1,31,by=1)
P_sum = 0
for (ix in scom){
P_sum = dgeom(ix,0.03) + P_sum
}
pgeom(ix,0.03)
P_sum
scom = c(1,31,by=1)
P_sum = 0
for (ix in scom){
P_sum = dgeom(ix,0.03) + P_sum
}
pgeom(30,0.03)
P_sum
help("rgeon")
help("rgeom")
rgeon(10000,0.03)
rgeom(10000,0.03)
getwd()
setwd("C:/Users/5559/Desktop/StackkkoverFlow/Data")
# setwd("C:/Users/5559/Desktop/StackkkoverFlow/Data")
hum = data.frame(read.table(file = "new.csv" , sep = ",", header = TRUE))
getwd()
# setwd("C:/Users/5559/Desktop/StackkkoverFlow/Data")
hum = data.frame(read.table(file = "new.csv" , sep = ",", header = TRUE))
# setwd("C:/Users/5559/Desktop/StackkkoverFlow/Data/")
hum = data.frame(read.table(file = "new.csv" , sep = ",", header = TRUE))
# setwd("C:/Users/5559/Desktop/StackkkoverFlow/Data/")
hum = data.frame(read.table(file = "new.csv" , sep = ",", header = TRUE))
setwd("C:/Users/5559/Desktop/StackkkoverFlow")
# setwd("C:/Users/5559/Desktop/StackkkoverFlow")
hum = data.frame(read.table(file = "Data/new.csv" , sep = ",", header = TRUE))
hum
# setwd("C:/Users/5559/Desktop/StackkkoverFlow")
st_old = data.frame(read.table(file = "Data/old.csv" , sep = ",", header = TRUE))
st_new = data.frame(read.table(file = "Data/new.csv" , sep = ",", header = TRUE))
# setwd("C:/Users/5559/Desktop/StackkkoverFlow")
st_old = data.frame(read.table(file = "Data/old.csv" , sep = ",", header = TRUE))
st_new = data.frame(read.table(file = "Data/new.csv" , sep = ",", header = TRUE))
st_old
cou = c(1,100,by=1)
rep = 0;
for(ix in cou){
for(iy in cou){
if(st_old$Id=st_new$id){
cou = c(1,100,by=1)
rep = 0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix=iy){
cou = c(1,100,by=1)
rep = 0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
}
}
}
cou = c(1,100,by=1)
rep = 0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
}
}
}
rep
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
}
cxt= cxt+1
}
}
rep
cou_det
rep
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
}
cxt= cxt+1
}
}
rep
cou_det
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
ix
}
cxt= cxt+1
}
}
rep
cou_det
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
ix
}
cxt= cxt+1
}
}
rep
#cou_det
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
ix
iy
}
cxt= cxt+1
}
}
rep
#cou_det
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
ix
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
ix
iy
}
cxt= cxt+1
}
}
rep
#cou_det
cou = c(1,100,by=1)
cou_det=c(1,100,by=1)
rep = 0;
cxt=0;
for(ix in st_old$Id){
for(iy in st_new$Id){
if(ix==iy){
rep = rep+1;
cou_det[ix] = ix;
cxt
}
cxt= cxt+1
}
}
rep
#cou_det
length(week_2_3_common)
require(sqldf)
st_wk2 = data.frame(read.table(file = "Data/week2.csv" , sep = ",", header = TRUE))
st_wk3 = data.frame(read.table(file = "Data/week3.csv" , sep = ",", header = TRUE))
st_wk4 = data.frame(read.table(file = "Data/week4.csv" , sep = ",", header = TRUE))
st_wk5 = data.frame(read.table(file = "Data/week5.csv" , sep = ",", header = TRUE))
st_wk2_m <- sqldf('SELECT Id,DisplayName,final_score,2 as ty FROM st_wk2')
st_wk3_m <- sqldf('SELECT Id,DisplayName,final_score,3 as ty FROM st_wk3')
st_wk4_m <- sqldf('SELECT Id,DisplayName,final_score,4 as ty FROM st_wk4')
st_wk5_m <- sqldf('SELECT Id,DisplayName,final_score,5 as ty FROM st_wk5')
wekk_1_5= cbind(st_wk2_m,st_wk3_m,st_wk4_m,st_wk5_m)
week_2_3_common = vector(,100)
week_3_4_common = vector(,100)
week_4_5_common = vector(,100)
cu=0
# for week 2 and week 3
for(ih in st_wk2_m$Id ){
for(ip in st_wk3_m$Id)
if(ih==ip){
week_2_3_common[cu]=ih
cu=cu+1
}
}
week_2_3_common
length(week_2_3_common)
cu=0
# for week 3 and week 4
for(ih in st_wk3_m$Id ){
for(ip in st_wk4_m$Id)
if(ih==ip){
week_3_4_common[cu]=ih
cu=cu+1
}
}
week_3_4_common
cu=0
# for week 4 and week 5
for(ih in st_wk4_m$Id ){
for(ip in st_wk5_m$Id)
if(ih==ip){
week_4_5_common[cu]=ih
cu=cu+1
}
}
week_4_5_common
require(sqldf)
st_wk2 = data.frame(read.table(file = "Data/week2.csv" , sep = ",", header = TRUE))
st_wk3 = data.frame(read.table(file = "Data/week3.csv" , sep = ",", header = TRUE))
st_wk4 = data.frame(read.table(file = "Data/week4.csv" , sep = ",", header = TRUE))
st_wk5 = data.frame(read.table(file = "Data/week5.csv" , sep = ",", header = TRUE))
st_wk2_m <- sqldf('SELECT Id,DisplayName,final_score,2 as ty FROM st_wk2')
st_wk3_m <- sqldf('SELECT Id,DisplayName,final_score,3 as ty FROM st_wk3')
st_wk4_m <- sqldf('SELECT Id,DisplayName,final_score,4 as ty FROM st_wk4')
st_wk5_m <- sqldf('SELECT Id,DisplayName,final_score,5 as ty FROM st_wk5')
wekk_1_5= cbind(st_wk2_m,st_wk3_m,st_wk4_m,st_wk5_m)
week_2_3_common = vector(,100)
week_3_4_common = vector(,100)
week_4_5_common = vector(,100)
week_2_3_4_5_common = vector(,100)
cu=0
# for week 2 and week 3
for(ih in st_wk2_m$Id ){
for(ip in st_wk3_m$Id)
if(ih==ip){
week_2_3_common[cu]=ih
cu=cu+1
}
}
week_2_3_common
cu=0
# for week 3 and week 4
for(ih in st_wk3_m$Id ){
for(ip in st_wk4_m$Id)
if(ih==ip){
week_3_4_common[cu]=ih
cu=cu+1
}
}
week_3_4_common
cu=0
# for week 4 and week 5
for(ih in st_wk4_m$Id ){
for(ip in st_wk5_m$Id)
if(ih==ip){
week_4_5_common[cu]=ih
cu=cu+1
}
}
week_4_5_common
cu=0
# for week 2 and week 3 and week 4 and week 5
for(ih in week_2_3_common ){
for(ip in week_4_5_common)
if(ih==ip){
week_2_3_4_5_common[cu]=ih
cu=cu+1
}
}
week_2_3_4_5_common
cu=0
# for week 2 and week 3 and week 4 and week 5
for(ih in week_2_3_common ){
for(ip in week_4_5_common)
if(ih==ip){
week_2_3_4_5_common[cu]=ih
cu=cu+1
}
}
week_2_3_4_5_common
